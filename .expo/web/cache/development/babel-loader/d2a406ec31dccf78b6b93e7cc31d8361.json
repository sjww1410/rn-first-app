{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\make_APP\\\\react-native\\\\rn-first-app\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalItem from \"./components/GoalItem\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      courseGoals = _useState2[0],\n      setCourseGoals = _useState2[1];\n\n  var goalInputHandler = function goalInputHandler(enteredText) {\n    setEnteredGoal(enteredText);\n  };\n\n  var addGoalHander = function addGoalHander() {\n    setCourseGoals([].concat(_toConsumableArray(courseGoals), [{\n      id: Math.random().toString(),\n      value: enteredGoal\n    }]));\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    data: courseGoals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(GoalItem, {\n        title: itemData.item.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  }\n});","map":{"version":3,"sources":["D:/make_APP/react-native/rn-first-app/App.js"],"names":["StatusBar","React","useState","GoalItem","App","courseGoals","setCourseGoals","goalInputHandler","enteredText","setEnteredGoal","addGoalHander","id","Math","random","toString","value","enteredGoal","styles","screen","item","index","itemData","StyleSheet","create","padding"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACSF,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACrBG,WADqB;AAAA,MACRC,cADQ;;AAG5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AACxCC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAFD;;AAIA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BJ,IAAAA,cAAc,8BAAKD,WAAL,IAAkB;AAAEM,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,MAAAA,KAAK,EAACC;AAAtC,KAAlB,GAAd;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AACM,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBD,IAAI,CAACR,EAAtB;AAAA,KADpB;AAEM,IAAA,IAAI,EAAEN,WAFZ;AAGM,IAAA,UAAU,EAAE,oBAAAgB,QAAQ;AAAA,aAAI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,QAAQ,CAACF,IAAT,CAAcJ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD;AAED,IAAME,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,OAAO,EAAE;AADH;AADuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, ScrollView, FlatList } from 'react-native';\r\nimport GoalItem from './components/GoalItem';\r\n\r\nexport default function App() {\r\n  const [courseGoals, setCourseGoals] =useState([]);\r\n\r\n  const goalInputHandler = (enteredText) => {\r\n    setEnteredGoal(enteredText);\r\n  };\r\n\r\n  const addGoalHander = () => {\r\n    setCourseGoals([...courseGoals, { id: Math.random().toString(), value:enteredGoal}]);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      \r\n      <FlatList \r\n            keyExtractor={(item, index) => item.id}\r\n            data={courseGoals} \r\n            renderItem={itemData => <GoalItem title={itemData.item.value} />}\r\n            />\r\n          </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 50    \r\n  }  \r\n  \r\n});\r\n"]},"metadata":{},"sourceType":"module"}